version: "3.8"

services:
  users-service:
    build:
      context: ./users
      dockerfile: Dockerfile
      target: runner
    container_name: users_service
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      NODE_ENV: production
      PORT: 3000
      MONGO_URI: "mongodb://admin:admin@mongodb:27017/users?authSource=admin"
      RABBITMQ_URL: "amqp://admin:admin@rabbitmq:5672"
    ports:
      - "3000:3000"
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  notifications-service:
    build:
      context: ./notifications
      dockerfile: Dockerfile
      target: runner
    container_name: notifications_service
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      NODE_ENV: production
      RABBITMQ_URL: "amqp://admin:admin@rabbitmq:5672"
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pgrep node"]
      interval: 30s
      timeout: 10s
      retries: 3

  mongodb:
    image: mongo:6.0
    container_name: users_db
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
      MONGO_INITDB_DATABASE: users
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27017:27017"
    healthcheck:
      test: mongosh --eval "db.adminCommand('ping')" localhost:27017 --quiet
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    hostname: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
      RABBITMQ_DEFAULT_PERMISSIONS: ".* .* .*"
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - app-network

volumes:
  mongodb_data:
  rabbitmq_data:

networks:
  app-network:
    driver: bridge
